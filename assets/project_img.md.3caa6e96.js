import{_ as n,c as s,o as a,b as t}from"./app.9fa706b0.js";const y='{"title":"\u9996\u5C4F\u56FE\u7247\u6E32\u67D3\u4F18\u5316","description":"","frontmatter":{},"headers":[{"level":3,"title":"\u9996\u5C4F\u56FE\u7247\u6E32\u67D3\u4F18\u5316","slug":"\u9996\u5C4F\u56FE\u7247\u6E32\u67D3\u4F18\u5316"}],"relativePath":"project/img.md"}',p={},o=t(`<h3 id="\u9996\u5C4F\u56FE\u7247\u6E32\u67D3\u4F18\u5316" tabindex="-1">\u9996\u5C4F\u56FE\u7247\u6E32\u67D3\u4F18\u5316 <a class="header-anchor" href="#\u9996\u5C4F\u56FE\u7247\u6E32\u67D3\u4F18\u5316" aria-hidden="true">#</a></h3><p>\u56FE\u7247\u9884\u52A0\u8F7D\u4E00\u822C\u9488\u5BF9\u662F\u975E\u9996\u5C4F\u7684\u56FE\u7247\uFF0Cios\u5185\u6838\u4E2D\uFF0C\u4E00\u4E9B\u9996\u5C4F\u56FE\u7247\u662F\u5728js\u89E3\u6790\u6267\u884C\u4E4B\u540E\u624D\u6E32\u67D3\uFF0C\u8FD9\u6837\u7528\u6237\u4F53\u9A8C\u975E\u5E38\u5DEE \u89E3\u51B3\u65B9\u6848\uFF1A\u9996\u5C4F\u6E32\u67D3\u6162\u7684\u56FE\u7247\uFF0C\u5229\u7528link preload\u63D0\u524D\u52A0\u8F7D</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">PreloadAssetsController</span> <span class="token punctuation">{</span>
    hit <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u662F\u5426\u751F\u6548</span>

    <span class="token function-variable function">isRequestHit</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">req</span><span class="token operator">:</span> Request</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> boolean<span class="token punctuation">;</span>

    images <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// key: image url; value: image params</span>

    <span class="token function">addImage</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">url</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">params</span><span class="token operator">:</span> IAnyObject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>images<span class="token punctuation">[</span>url<span class="token punctuation">]</span> <span class="token operator">=</span> params <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">getImages</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> req <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">req</span><span class="token operator">:</span> Request <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> webpEnable <span class="token operator">=</span> <span class="token function">getWebpEnable</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>images<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>url<span class="token punctuation">,</span> params<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">[</span>string<span class="token punctuation">,</span> IAnyObject<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">generateCDNImageUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token constant">DEFAULT_PARAM</span><span class="token punctuation">,</span> <span class="token operator">...</span>params<span class="token punctuation">,</span> webpEnable <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">setPreloadAssetsController</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> PreloadAssetsController</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    controllers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getPreloadAssetsController</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">req</span><span class="token operator">:</span> Request</span><span class="token punctuation">)</span><span class="token operator">:</span> PreloadAssetsController <span class="token punctuation">{</span>
    <span class="token keyword">const</span> c <span class="token operator">=</span> controllers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>c<span class="token punctuation">.</span>isRequestHit <span class="token operator">||</span> c<span class="token punctuation">.</span><span class="token function">isRequestHit</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> c<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PreloadAssetsController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u751F\u6210html</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">renderTop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span>locals<span class="token punctuation">.</span>extractor <span class="token operator">=</span> extractor<span class="token punctuation">;</span>
    <span class="token comment">// const serverTemplateName = appConfig.serverTemplateName;</span>
    res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token string-property property">&#39;X-Accel-Buffering&#39;</span><span class="token operator">:</span> <span class="token string">&#39;no&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/html; charset=UTF-8&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> scriptArray <span class="token operator">=</span> extractor<span class="token punctuation">.</span><span class="token function">getMainAssets</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> style <span class="token operator">=</span> extractor<span class="token punctuation">.</span><span class="token function">getMainAssets</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> ua <span class="token operator">=</span> req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;user-agent&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> platform <span class="token operator">=</span> <span class="token function">getPlatform</span><span class="token punctuation">(</span>ua<span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span>locals<span class="token punctuation">.</span>isNativePlatform <span class="token operator">=</span> platform<span class="token punctuation">.</span>isNativePlatform<span class="token punctuation">;</span>
    scriptArray<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">script</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        pushedScript<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>script<span class="token punctuation">.</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pushedAssets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> locals <span class="token operator">=</span> res<span class="token punctuation">.</span>locals<span class="token punctuation">;</span>
    <span class="token keyword">const</span> head <span class="token operator">=</span> ReactDOMServer<span class="token punctuation">.</span><span class="token function">renderToString</span><span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>Head
            locals<span class="token operator">=</span><span class="token punctuation">{</span>res<span class="token punctuation">.</span>locals<span class="token punctuation">}</span>
            script<span class="token operator">=</span><span class="token punctuation">{</span>pushedAssets<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">script<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>locals<span class="token punctuation">.</span>bigBipeScriptLoadType <span class="token operator">===</span> ScriptLoadType<span class="token punctuation">.</span>Defer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token operator">&lt;</span>script key<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> src<span class="token operator">=</span><span class="token punctuation">{</span>script<span class="token punctuation">.</span>url<span class="token punctuation">}</span> crossOrigin<span class="token operator">=</span><span class="token string">&quot;anonymous&quot;</span> defer <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">&quot;preload&quot;</span> key<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> href<span class="token operator">=</span><span class="token punctuation">{</span>script<span class="token punctuation">.</span>url<span class="token punctuation">}</span> crossOrigin<span class="token operator">=</span><span class="token string">&quot;anonymous&quot;</span> <span class="token keyword">as</span><span class="token operator">=</span><span class="token string">&quot;script&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
            style<span class="token operator">=</span><span class="token punctuation">{</span>style<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">style<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>locals<span class="token punctuation">.</span>enableBigPipeInlineStyle <span class="token operator">&amp;&amp;</span> cssFilesMap<span class="token punctuation">[</span>style<span class="token punctuation">.</span>filename<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token operator">&lt;</span>style dangerouslySetInnerHTML<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">__html</span><span class="token operator">:</span> cssFilesMap<span class="token punctuation">[</span>style<span class="token punctuation">.</span>filename<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token operator">&lt;</span>link key<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> rel<span class="token operator">=</span><span class="token string">&quot;stylesheet&quot;</span> href<span class="token operator">=</span><span class="token punctuation">{</span>style<span class="token punctuation">.</span>url<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
        <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> preloadAssetsController <span class="token operator">=</span> <span class="token function">getPreloadAssetsController</span><span class="token punctuation">(</span>entrypoint<span class="token punctuation">,</span> req<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> images <span class="token operator">=</span> preloadAssetsController<span class="token punctuation">.</span><span class="token function">getImages</span><span class="token punctuation">(</span><span class="token punctuation">{</span> req <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> preloadImagesScript <span class="token operator">=</span> images<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> imgUrl</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> acc <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;link rel=&quot;preload&quot; href=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>imgUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; as=&quot;image&quot;&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span>locals<span class="token punctuation">.</span>preloadAssetsController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PreloadAssetsController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-cmn-Hans&quot;&gt;&lt;head&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>head<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>preloadImagesScript<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u811A\u672C\u52A0\u8F7D\u4E0B\u4E00\u4E2A\u52A8\u753B\u5E27\u52A0\u8F7D</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">loadScript</span><span class="token punctuation">(</span><span class="token parameter">sources</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fragment <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createDocumentFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sources<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> s <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        s<span class="token punctuation">.</span>src <span class="token operator">=</span> sources<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        s<span class="token punctuation">.</span>crossOrigin <span class="token operator">=</span> <span class="token string">&#39;anonymous&#39;</span><span class="token punctuation">;</span>
        fragment<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">scriptDelayLoad</span><span class="token punctuation">(</span><span class="token parameter">sources</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> raf <span class="token operator">=</span> window<span class="token punctuation">.</span>requestAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>webkitRequestAnimationFrame <span class="token operator">||</span> setTimeout<span class="token punctuation">;</span>
    <span class="token function">raf</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">loadScript</span><span class="token punctuation">(</span>sources<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,7),e=[o];function c(u,l,k,r,i,d){return a(),s("div",null,e)}var g=n(p,[["render",c]]);export{y as __pageData,g as default};
